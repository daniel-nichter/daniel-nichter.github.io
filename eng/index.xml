<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Engs on Hack MySQL</title>
    <link>https://hackmysql.com/eng/</link>
    <description>Recent content in Engs on Hack MySQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2022 Daniel Nichter</copyright>
    <lastBuildDate>Sun, 18 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://hackmysql.com/eng/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Career Advice</title>
      <link>https://hackmysql.com/eng/career-advice/</link>
      <pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hackmysql.com/eng/career-advice/</guid>
      <description>Career Advice 1. Add Value Success follows value.
Ensure that the work you do adds value to the business and other people.
2. Write Well Write well every document that&amp;rsquo;s read by other people (even if it&amp;rsquo;s just a README).
People usually don&amp;rsquo;t tell you when your writing is poor, but they will notice because it&amp;rsquo;s tedious to readâ€”you&amp;rsquo;re making them do extra work to understand you. Being known for poor writing won&amp;rsquo;t hurt your career, but it certainly won&amp;rsquo;t help it either.</description>
    </item>
    
    <item>
      <title>How to Write Well</title>
      <link>https://hackmysql.com/eng/write/</link>
      <pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hackmysql.com/eng/write/</guid>
      <description>How to Write Well I wrote this page before reading On Writing Well by William Zinsser.
To my surprise and delight, he reinforces everything I wrote below. In fact, he goes further and makes the points stronger. For example, near the end of the book he writes:
No writing decision is too small to be worth a large expenditure of time.
Zinsser is (or was: he died in 2015) an authority on writing, and I&amp;rsquo;m just an amateur by comparison.</description>
    </item>
    
    <item>
      <title>Database Operations Manual</title>
      <link>https://hackmysql.com/eng/database-operations-manual/</link>
      <pubDate>Sat, 16 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hackmysql.com/eng/database-operations-manual/</guid>
      <description>Database Operations Manual Running a database is easy, especially in the cloud, but operating a database is complicated. This page outlines operational aspects (OA) required to operate a database in production, at scale.
Last updated: October 16, 2021
1. Security Security is the first priority: nothing else matters if the database is compromised. It is better for a database to be offline than hacked. Security permeates every operational aspects (OA), but these OA address the most critical aspects, like root (super) access and encryption.</description>
    </item>
    
    <item>
      <title>Percentiles</title>
      <link>https://hackmysql.com/eng/percentiles/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hackmysql.com/eng/percentiles/</guid>
      <description>Percentiles Percentiles are ubiquitous in application performance monitoring, particularly the 95th (P95), 99th (P99), and 99.9th (P999) percentiles. The basic concept is simple: percentile Pn means n% of all values are &amp;lt;= than the Pn value. If the P95 value = 100ms, then 95% of all values are &amp;lt;= 100ms. In other words: 5% of all values are &amp;gt; 100ms. Percentiles discard the top (100-n)% values as outliers for various reasons which are outside the scope of this page.</description>
    </item>
    
  </channel>
</rss>
