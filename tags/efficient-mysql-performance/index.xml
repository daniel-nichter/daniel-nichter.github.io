<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>efficient-mysql-performance on Hack MySQL</title>
    <link>https://hackmysql.com/tags/efficient-mysql-performance/</link>
    <description>Recent content in efficient-mysql-performance on Hack MySQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2022 Daniel Nichter</copyright>
    <lastBuildDate>Fri, 20 May 2022 19:00:00 -0400</lastBuildDate><atom:link href="https://hackmysql.com/tags/efficient-mysql-performance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I Don&#39;t Want to Shard (MySQL)</title>
      <link>https://hackmysql.com/post/book-5/</link>
      <pubDate>Fri, 20 May 2022 19:00:00 -0400</pubDate>

      <guid>https://hackmysql.com/post/book-5/</guid>
      <description>&lt;p&gt;Chapter 5 of &lt;a href=&#34;https://oreil.ly/efficient-mysql-performance&#34;&gt;&lt;em&gt;Efficient MySQL Performance&lt;/em&gt;&lt;/a&gt; addresses sharding, and it was difficult to write but not for technical reasons.
Let me say a little more on the matter.&lt;/p&gt;</description>
    </item>

    <item>
      <title>Access Patterns for MySQL</title>
      <link>https://hackmysql.com/post/book-4/</link>
      <pubDate>Sun, 17 Apr 2022 13:50:00 -0400</pubDate>

      <guid>https://hackmysql.com/post/book-4/</guid>
      <description>&lt;p&gt;Access patterns intrigue me because it seems that everyone knows what they are and talks about them, but there&amp;rsquo;s also very little written about them—in MySQL literature, at least.
That&amp;rsquo;s why I set out to enumerate a list of access patterns (specific to MySQL).
Since there&amp;rsquo;s no apparent standard for access patterns, I cannot say how my list measures up, but after spending most my career with MySQL, I know this: it is necessary to consider these access patterns when evaluating and improving MySQL performance.
Simply put: you cannot ignore &lt;em&gt;how&lt;/em&gt; the application accesses MySQL.&lt;/p&gt;</description>
    </item>

    <item>
      <title>Performance Is Less</title>
      <link>https://hackmysql.com/post/book-3/</link>
      <pubDate>Sat, 19 Mar 2022 16:04:00 -0400</pubDate>

      <guid>https://hackmysql.com/post/book-3/</guid>
      <description>&lt;p&gt;Is MySQL performance about &amp;ldquo;more&amp;rdquo; or &amp;ldquo;less&amp;rdquo;? From the title, you can tell that I&amp;rsquo;m going to argue that it&amp;rsquo;s about &amp;ldquo;less&amp;rdquo;. Here&amp;rsquo;s the punchline: zero is maximum performance. Let&amp;rsquo;s see where this philosophical blog post leads us.&lt;/p&gt;</description>
    </item>

    <item>
      <title>MySQL EXPLAIN ANALYZE</title>
      <link>https://hackmysql.com/post/book-2/</link>
      <pubDate>Sun, 27 Feb 2022 14:28:00 -0500</pubDate>

      <guid>https://hackmysql.com/post/book-2/</guid>
      <description>&lt;p&gt;As of MySQL 8.0.18, &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/explain.html#explain-analyze&#34;&gt;&lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;&lt;/a&gt; is an indispensable tool for understanding query execution because it breaks down the query execution stage of response time by measuring each step of the query execution plan.
The information is illuminating, but the output is not intuitive: it requires practice and some understanding of how MySQL executes queries beyond the table join order shown by traditional &lt;code&gt;EXPLAIN&lt;/code&gt; output.
This blog post closely examines three different examples of &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; output.&lt;/p&gt;</description>
    </item>

    <item>
      <title>Configuring MySQL Query Metrics</title>
      <link>https://hackmysql.com/post/book-1/</link>
      <pubDate>Sun, 16 Jan 2022 15:40:00 -0500</pubDate>

      <guid>https://hackmysql.com/post/book-1/</guid>
      <description>&lt;p&gt;Editors and technical reviewers suggested that I cover how to configure MySQL query metrics in chapter 1 of &lt;a href=&#34;https://oreil.ly/efficient-mysql-performance&#34;&gt;&lt;em&gt;Efficient MySQL Performance&lt;/em&gt;&lt;/a&gt;, but I deferred because it was out of scope for the book, which focuses on engineers &lt;em&gt;using&lt;/em&gt; MySQL, not DBAs.
As such, there&amp;rsquo;s only a note in chapter 1 that says: &amp;ldquo;Ask your DBA or read the MySQL manual.&amp;rdquo;
But I&amp;rsquo;ll cover the topic here because that&amp;rsquo;s what this blog post series is for: behind the book.&lt;/p&gt;</description>
    </item>

    <item>
      <title>Efficient MySQL Performance</title>
      <link>https://hackmysql.com/post/book-0/</link>
      <pubDate>Mon, 27 Dec 2021 09:30:00 -0500</pubDate>

      <guid>https://hackmysql.com/post/book-0/</guid>
      <description>&lt;p&gt;After 17 years with MySQL, I wrote a book: &lt;a href=&#34;https://oreil.ly/efficient-mysql-performance&#34;&gt;&lt;em&gt;Efficient MySQL Performance&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll make a bold claim: a MySQL book like this has never been written—not even close.
The preface explains why this book is unique:&lt;/p&gt;</description>
    </item>

  </channel>
</rss>
