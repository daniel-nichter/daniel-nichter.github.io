<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on Hack MySQL</title>
    <link>https://hackmysql.com/tags/database/</link>
    <description>Recent content in database on Hack MySQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021 Daniel Nichter</copyright>
    <lastBuildDate>Sat, 16 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hackmysql.com/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Database Operations Manual</title>
      <link>https://hackmysql.com/eng/database-operations-manual/</link>
      <pubDate>Sat, 16 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hackmysql.com/eng/database-operations-manual/</guid>
      <description>Database Operations Manual Running a database is easy, especially in the cloud, but operating a database is complicated. This page outlines operational aspects (OA) required to operate a database in production, at scale.
Last updated: October 16, 2021
1. Security Security is the first priority: nothing else matters if the database is compromised. It is better for a database to be offline than hacked. Security permeates every operational aspects (OA), but these OA address the most critical aspects, like root (super) access and encryption.</description>
    </item>
    
    <item>
      <title>Database Scalability: Contention and Crosstalk</title>
      <link>https://hackmysql.com/post/database-scalability-contention-and-crosstalk/</link>
      <pubDate>Sun, 28 Jan 2018 11:20:00 -0700</pubDate>
      
      <guid>https://hackmysql.com/post/database-scalability-contention-and-crosstalk/</guid>
      <description>New engineers might not know and experienced engineers might not believe that database systems do not and cannot scale gracefully to 100% system capacity but, rather and counterintutively, exhibit retrograde performance at some point less than 100% system capacity. The reasonable presumption is:
We presume that a database can scale to almost 100% of system capacity, and max performance is a small fraction at the very top (right, orange slice) because, after all, the system itself needs some resources to run itself.</description>
    </item>
    
    <item>
      <title>How To Test the Database</title>
      <link>https://hackmysql.com/post/how-to-test-the-database/</link>
      <pubDate>Sun, 20 Aug 2017 11:20:00 -0700</pubDate>
      
      <guid>https://hackmysql.com/post/how-to-test-the-database/</guid>
      <description>&amp;ldquo;How do I test the database?&amp;rdquo; is a question I&amp;rsquo;ve been asked by colleagues many times. There&amp;rsquo;s a good, clean solution, but let&amp;rsquo;s first step back from what seems to be the problem to unpack why &amp;ldquo;testing the database&amp;rdquo; is not special (but nonetheless important). In other words: colleagues don&amp;rsquo;t ask, &amp;ldquo;How do I test such-and-such package?&amp;rdquo;, because that&amp;rsquo;s common and well understood. The question about testing the database implies that the database is a special beast that, if not treated properly, will devour the developer in their sleep.</description>
    </item>
    
  </channel>
</rss>
